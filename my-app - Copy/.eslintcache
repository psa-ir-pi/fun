[{"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js":"1","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js":"2","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js":"3","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js":"4","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js":"5","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js":"6","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js":"7","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js":"8"},{"size":517,"mtime":1648789762126,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1648789762127,"results":"11","hashOfConfig":"10"},{"size":554,"mtime":1649359703554,"results":"12","hashOfConfig":"10"},{"size":253,"mtime":1648789762125,"results":"13","hashOfConfig":"10"},{"size":782,"mtime":1649012226594,"results":"14","hashOfConfig":"10"},{"size":5167,"mtime":1649348548276,"results":"15","hashOfConfig":"10"},{"size":3263,"mtime":1649360039590,"results":"16","hashOfConfig":"10"},{"size":2856,"mtime":1649347821748,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bhfiz6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js",[],["38","39"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js",["40"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {Home} from './Home';\r\nimport {AllProjects} from './AllProjects';\r\nimport {Navigation} from './Navigation';\r\n\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"container\">\r\n\r\n     <Navigation/>\r\n\r\n     <Switch>\r\n       <Route path='/' component={Home} exact/>\r\n       <Route path='/allProjects' component={AllProjects}/>\r\n     </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js",["41","42","43"],"import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\nimport {CreateProject} from './CreateProject';\r\nimport {EditProject} from './EditProject';\r\nimport { format } from 'date-fns'\r\n\r\nexport class AllProjects extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={projects:[], createShow:false, editShow:false}\r\n        this.state2 = {tasks:[]};\r\n    }\r\n\r\n    getProjects(){\r\n        fetch(process.env.REACT_APP_API+'project')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({projects:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProjects();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getProjects();\r\n    }\r\n\r\n    // gets all tasks assigned to project and test whether they are Uzdaryti\r\n    testIfAllTasksFinished(projectid){\r\n        fetch(process.env.REACT_APP_API+'task/ProjectTasks'+projectid)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({tasks:data});\r\n        });\r\n        var flag = false;\r\n        const {tasks} = this.state2\r\n        tasks.map((task)=>{\r\n            if (task.busena=='Uzdaryta')flag=true;\r\n        });\r\n        return flag;\r\n    }\r\n\r\n    // first calls a func testIfAllTasksFinished and then ask for confirmation to delete project by id\r\n    deleteProject(projectId){\r\n        const flag = this.testIfAllTasksFinished(projectId);\r\n        if(flag){\r\n            if(window.confirm('There are unfinished tasks. \\nAre you sure you want to delete the project?')){\r\n                fetch(process.env.REACT_APP_API+'project/'+projectId,{\r\n                    method:'DELETE',\r\n                    header:{'Accept':'application/json',\r\n                'Content-Type':'application/json'}\r\n                });\r\n            }\r\n        }else{\r\n            if(window.confirm('Are you sure?')){\r\n                fetch(process.env.REACT_APP_API+'project/'+projectId,{\r\n                    method:'DELETE',\r\n                    header:{'Accept':'application/json',\r\n                    'Content-Type':'application/json'}\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {projects, projectId,projectName, projectDate, projectDescription}=this.state;//delete projectDescription mayby\r\n        console.log(projects)\r\n        let createClose=()=>this.setState({createShow:false});\r\n        let editClose=()=>this.setState({editShow:false});\r\n        return(\r\n            <div class=\"col-lg-12  text-center\">\r\n                <h1>All projects</h1>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project name</th>\r\n                            <th>Project creation date</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects.map(proj=>\r\n                            <tr key={proj.id}>\r\n                                <td>{proj.name}</td>\r\n                                <td>{proj.date.slice(0, 10)}</td>\r\n                                <td >\r\n                                        <ButtonToolbar>\r\n                                            <Button className=\"mr-2\" variant=\"info\"\r\n                                            onClick={()=>this.setState({editShow:true,\r\n                                                projectId:proj.id, projectDate:proj.date, projectName:proj.name, projectDescription:proj.description})}>\r\n                                                    Edit\r\n                                                </Button>\r\n\r\n                                                <Button className=\"mr-2\" variant=\"danger\"\r\n                                            onClick={()=>this.deleteProject(proj.id)}>\r\n                                                    Delete\r\n                                                </Button>\r\n\r\n                                                <EditProject show={this.state.editShow}\r\n                                                onHide={editClose}\r\n                                                projectId={projectId}\r\n                                                projectName={projectName}\r\n                                                projectDescription={projectDescription}\r\n                                                projectDate={projectDate}\r\n                                                />\r\n                                        </ButtonToolbar>\r\n\r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({createShow:true})}>\r\n                    Add Project</Button>\r\n\r\n                    <CreateProject show={this.state.createShow}\r\n                    onHide={createClose}/>\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js",["44"],"import React,{Component, useState} from 'react';\r\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nexport class CreateProject extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'project',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:0,\r\n                name:event.target.name.value,\r\n                description:event.target.description.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    render(){     \r\n        return (\r\n            <div className=\"container\">\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Project\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Project Name</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"name\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"description\">\r\n                                    <Form.Label>Project Description</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"description\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Project\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":42,"column":25,"nodeType":"56","messageId":"57","endLine":42,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":43,"column":28,"nodeType":"60","messageId":"61","endLine":43,"endColumn":30},{"ruleId":"49","severity":1,"message":"62","line":1,"column":26,"nodeType":"51","messageId":"52","endLine":1,"endColumn":34},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'format' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]