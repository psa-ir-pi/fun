[{"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js":"1","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js":"2","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js":"3","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js":"4","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js":"5","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js":"6","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js":"7","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js":"8","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\MyProjects.js":"9","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateComment.js":"10","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\common\\CommonFunctions.js":"11","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\RecordCount.js":"12","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\LoadingSpinner.js":"13","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlComment.js":"14","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\SprintsTable.js":"15","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\TasksTable.js":"16","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\BranchesTable.js":"17","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\VersionsTable.js":"18","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Branch.js":"19","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CodeView.js":"20","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlSprint.js":"21","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ProjectMember.js":"22","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlTasks.js":"23","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AssignManually.js":"24","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateTasks.js":"25","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateSprint.js":"26"},{"size":517,"mtime":1652514955911,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1648789762127,"results":"29","hashOfConfig":"28"},{"size":1494,"mtime":1652883916934,"results":"30","hashOfConfig":"28"},{"size":253,"mtime":1648789762125,"results":"31","hashOfConfig":"28"},{"size":1242,"mtime":1652885964980,"results":"32","hashOfConfig":"28"},{"size":5962,"mtime":1652884027378,"results":"33","hashOfConfig":"28"},{"size":3528,"mtime":1650377608010,"results":"34","hashOfConfig":"28"},{"size":2856,"mtime":1649347821748,"results":"35","hashOfConfig":"28"},{"size":5300,"mtime":1652801520099,"results":"36","hashOfConfig":"28"},{"size":4020,"mtime":1652620363560,"results":"37","hashOfConfig":"28"},{"size":1584,"mtime":1652547424194,"results":"38","hashOfConfig":"28"},{"size":953,"mtime":1604370539666,"results":"39","hashOfConfig":"28"},{"size":568,"mtime":1603244841220,"results":"40","hashOfConfig":"28"},{"size":3701,"mtime":1652541025604,"results":"41","hashOfConfig":"28"},{"size":4533,"mtime":1652801949710,"results":"42","hashOfConfig":"28"},{"size":4354,"mtime":1652802024071,"results":"43","hashOfConfig":"28"},{"size":3741,"mtime":1652802001626,"results":"44","hashOfConfig":"28"},{"size":3873,"mtime":1652885010066,"results":"45","hashOfConfig":"28"},{"size":4826,"mtime":1652883910400,"results":"46","hashOfConfig":"28"},{"size":1960,"mtime":1652883916935,"results":"47","hashOfConfig":"28"},{"size":3351,"mtime":1652886015552,"results":"48","hashOfConfig":"28"},{"size":6657,"mtime":1652883916938,"results":"49","hashOfConfig":"28"},{"size":7786,"mtime":1652884880739,"results":"50","hashOfConfig":"28"},{"size":4146,"mtime":1652883916935,"results":"51","hashOfConfig":"28"},{"size":4069,"mtime":1652883916937,"results":"52","hashOfConfig":"28"},{"size":3341,"mtime":1652883916937,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1bhfiz6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js",[],["115","116"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js",["117","118"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js",["119","120","121"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js",["122"],"import React,{Component, useState} from 'react';\r\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nexport class CreateProject extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'project',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:0,\r\n                name:event.target.name.value,\r\n                description:event.target.description.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    render(){     \r\n        return (\r\n            <div className=\"container\">\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Project\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Project Name</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"name\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"description\">\r\n                                    <Form.Label>Project Description</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"description\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Project\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\MyProjects.js",["123","124","125"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { requestData, getTableDataFromJSONObject } from \"./common/CommonFunctions.js\";\r\n\r\nimport ReactTable from \"react-table-6\";\r\nimport LoadingSpinner from \"./widgets/LoadingSpinner.js\";\r\nimport RecordCount from \"./widgets/RecordCount.js\";\r\nimport { ReactTableDefaults } from \"react-table-6\";\r\nimport SprintsTable from \"./SprintsTable.js\";                                                 //---> 1\r\n\r\nimport \"./index.css\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport {Branch} from './Branch.js';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//Set default values of React Table\r\nObject.assign(ReactTableDefaults, {\r\n  multiSort: false,\r\n  LoadingComponent: LoadingSpinner\r\n});\r\n\r\nconst MyProjects = () => {\r\n\r\n  const _isMounted = useRef(false);\r\n  const userTableRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pages, setPages] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  const sort = [{\"id\": \"id\",\"desc\": false}];\r\n\r\n  const [branchShow, setBranch] = useState(false);\r\n  \r\n  \r\n  function getProjects() {\r\n\r\n    return requestData(\r\n      \"/project\",\r\n      {},\r\n      \"get\"\r\n    );\r\n  }\r\n  \r\n  useEffect(() => {\r\n\r\n    _isMounted.current = true;\r\n    fetchData();\r\n\r\n    return () => {\r\n      _isMounted.current = false;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function fetchData(state) {\r\n    \r\n    let pageSize = state === undefined ? 5 : state.pageSize;\r\n    let page = state === undefined ? 0 : state.page;\r\n    let sorted = state === undefined ? sort : state.sorted;\r\n    setLoading(true);\r\n    \r\n    getProjects()\r\n      .then(res => {\r\n        for (let el of res.data) {\r\n          el.date = el.date.slice(0, 10);\r\n      }\r\n        getTableDataFromJSONObject(res.data, pageSize, page, sorted, \"users\")\r\n          .then(result => {\r\n            if (_isMounted.current) {\r\n              console.log(result.rows[0].users)\r\n              setLoading(false);\r\n              setPages(result.pages === undefined ? 0 : result.pages);\r\n              setData(result.rows[0].users);\r\n              setTotalRecords(result.totalRecords);\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.warn(error);\r\n          if (_isMounted.current) {\r\n            setLoading(false);\r\n          }\r\n        });\r\n      })\r\n    .catch(error => {\r\n      console.warn(error);\r\n      if (_isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n  console.log(data)\r\n  //let createClose=()=>this.setState({createShow:false});\r\n  let branchClose=()=>setBranch(false);\r\n\r\n  const history = useHistory();\r\n  \r\n    const branchPage = (id) => {\r\n        history.push(\"/branch/\"+id)\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n    \t<div style={{ textAlign: \"center\", padding: \"35px\" }}>\r\n        <h3>\r\n            Projects\r\n        </h3>\r\n        <p />\r\n        <ReactTable\r\n            ref={userTableRef}\r\n            columns={[\r\n              {\r\n                Header: \"Id\",\r\n                accessor: \"id\",\r\n                width: 70,\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Date\",\r\n                accessor: \"date\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Description\",\r\n                accessor: \"description\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"View Branches\",\r\n                accessor: \"id\",\r\n                Cell: cell => (\r\n                <button className=\"btn btn-success\" \r\n                onClick={() =>branchPage(cell.original.id)}>Branch tree\r\n                </button>\r\n                )\r\n              }\r\n            ]}\r\n            defaultSorted={[\r\n              {\r\n                id: \"id\",\r\n                desc: false\r\n              }\r\n            ]}\r\n            manual\r\n            data={data}\r\n            pages={pages}\r\n            loading={loading}\r\n            onFetchData={fetchData}\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n            SubComponent={row => {     \r\n              return (\r\n                \r\n                <div style={{ padding: \"10px\" }}>\r\n                  <h3>\r\n                    Sprints\r\n                  </h3>\r\n                  <SprintsTable\r\n                    Id={row.original.id}\r\n                  />\r\n                </div>\r\n              );\r\n            }}            \r\n        >\r\n          {(state, makeTable) => {\r\n            return (\r\n              <RecordCount\r\n                state={state}\r\n                makeTable={makeTable}\r\n                totalRecords={totalRecords}\r\n              />\r\n            );\r\n          }}\r\n        </ReactTable>\r\n    \t</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MyProjects;","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateComment.js",["126","127","128"],"import React,{Component, useState} from 'react';\r\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nexport class CreateComment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.CreateComment.bind(this);\r\n    }\r\n\r\n\r\n    CreateComment(event){\r\n        event.preventDefault();\r\n        console.log(event.target.from_line.value)\r\n        if(event.target.from_line.value == \"\"){\r\n            event.target.from_line.value = -1\r\n        }\r\n        if(event.target.to_line.value == \"\"){\r\n            event.target.to_line.value = -1\r\n        }\r\n        fetch(process.env.REACT_APP_API+'comment',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                text:event.target.text.value,\r\n                from_line:event.target.from_line.value,\r\n                to_line:event.target.to_line.value,\r\n                foreign_version:event.target.foreign_version.value,\r\n                foreign_user:event.target.foreign_user.value,\r\n\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    render(){     \r\n        return (\r\n            <div className=\"container\">\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Project\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.CreateComment}>\r\n                                <Form.Group controlId=\"text\">\r\n                                    <Form.Label>Text</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"text\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"from_line\">\r\n                                    <Form.Label>From line</Form.Label>\r\n                                    <Form.Control type=\"nummber\" name=\"from_line\"  \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"to_line\">\r\n                                    <Form.Label>To line</Form.Label>\r\n                                    <Form.Control type=\"nummber\" name=\"to_line\"\r\n                                    placeholder=''  />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"foreign_version\">\r\n                                    <Form.Control type=\"hidden\" name=\"foreign_version\" value={2}/>\r\n                                </Form.Group>   \r\n                                <Form.Group controlId=\"foreign_user\">\r\n                                    <Form.Control type=\"hidden\" name=\"foreign_user\" value={1}/>\r\n                                </Form.Group>   \r\n\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Project\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\common\\CommonFunctions.js",["129"],"import axios from \"axios\";\r\n\r\nexport function objToQueryString(obj) {\r\n\tconst keyValuePairs = [];\r\n\tfor (const key in obj) {\r\n\t\tkeyValuePairs.push(\r\n\t\t\tencodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key])\r\n\t\t);\r\n\t}\r\n\treturn keyValuePairs.join(\"&\");\r\n}\r\n\r\nexport function requestData(url, paramObject, method) {\r\n  axios.defaults.baseURL = \"http://localhost:53535/api\";\r\n\treturn axios.request({\r\n\t\turl: url + objToQueryString(paramObject),\r\n\t\tmethod: method,\r\n\t\theaders: {\r\n\t\t\tPragma: \"no-cache\"\r\n\t\t}\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response;\r\n\t})\r\n\t.catch(error => {\r\n\t\treturn error;\r\n\t});\r\n}\r\n\r\nfunction sortJSONObjects(data, prop, desc) {\r\n  return data.sort(function(a, b) {\r\n    if (desc) {\r\n      return b[prop] > a[prop] ? 1 : b[prop] < a[prop] ? -1 : 0;\r\n    } else {\r\n      return a[prop] > b[prop] ? 1 : a[prop] < b[prop] ? -1 : 0;\r\n    }\r\n  });\r\n}\r\n\r\nexport function getTableDataFromJSONObject(\r\n  jsonData,\r\n  pageSize,\r\n  page,\r\n  sorted,\r\n  dataKey\r\n) {\r\n  let startIndex = 0;\r\n  let endIndex = pageSize;\r\n  if (page > 0) {\r\n    startIndex = page * pageSize;\r\n    endIndex = startIndex + pageSize;\r\n  }\r\n  //jsonData = sortJSONObjects(jsonData, sorted[0].id, sorted[0].desc);\r\n  return new Promise((resolve, reject) => {\r\n    if (jsonData) {\r\n      let rows = {\r\n        rows: [\r\n          {\r\n            [dataKey]: jsonData.slice(startIndex, endIndex)\r\n          }\r\n        ],\r\n        pages: Math.ceil(jsonData.length / pageSize),\r\n        totalRecords: jsonData.length\r\n      };\r\n      resolve(rows);\r\n    } else {\r\n      reject(\"Error\");\r\n    }\r\n  });\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\RecordCount.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\LoadingSpinner.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlComment.js",["130","131"],"import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\nimport {CreateComment} from './CreateComment';\r\n\r\nexport class ControlComment extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={comments:[], createShow:false, editShow:false}\r\n    }\r\n\r\n    getAllComments(){\r\n        fetch(process.env.REACT_APP_API+'comment')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            for (let comment of data) {\r\n                comment.date = comment.date.slice(0, 10);\r\n                if (comment.from_line == -1){\r\n                    comment.from_line = \"unspecified\"\r\n                }\r\n                if (comment.to_line == -1){\r\n                    comment.to_line = \"unspecified\"\r\n                }\r\n            }\r\n            this.setState({comments:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllComments();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getAllComments();\r\n    }\r\n\r\n    deleteComment(commentId){\r\n        if(window.confirm('Are you sure?')){\r\n            fetch(process.env.REACT_APP_API+'comment/'+commentId,{\r\n                method:'DELETE',\r\n                header:{'Accept':'application/json',\r\n                'Content-Type':'application/json'}\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {comments}=this.state;\r\n        let createClose=()=>this.setState({createShow:false});\r\n        return(\r\n            <div class=\"col-lg-12  text-center\">\r\n                <h1>All comments</h1>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Comment text</th>\r\n                            <th>Comment creation date</th>\r\n                            <th>User name</th>\r\n                            <th>Version id</th>\r\n                            <th>From line</th>\r\n                            <th>To line</th>\r\n                            <th>Project name</th>\r\n                            <th>Options</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {comments.map(co=>\r\n                            <tr key={co.id}>\r\n                                <td>{co.text}</td>\r\n                                <td>{co.date}</td>\r\n                                <td>{co.name}</td>\r\n                                <td>{co.foreign_version}</td>\r\n                                <td>{co.from_line}</td>\r\n                                <td>{co.to_line}</td>\r\n                                <td>{co.Project_name}</td>\r\n                                <td >\r\n                                        <ButtonToolbar>\r\n                                                <Button className=\"mr-2\" variant=\"danger\"\r\n                                            onClick={()=>this.deleteComment(co.id)}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({createShow:true})}>\r\n                    Add Comment</Button>\r\n\r\n                    <CreateComment show={this.state.createShow}\r\n                    onHide={createClose}/>\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\SprintsTable.js",["132"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { requestData, getTableDataFromJSONObject } from \"./common/CommonFunctions.js\";\r\nimport ReactTable from \"react-table-6\";\r\nimport RecordCount from \"./widgets/RecordCount.js\";\r\nimport \"./index.css\";\r\nimport TasksTable from \"./TasksTable.js\";                                          \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst SprintsTable = (props) => {\r\n\r\n  const _isMounted = useRef(false);\r\n  const postTableRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pages, setPages] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  const sort = [{\"id\": \"id\",\"desc\": false}];\r\n\r\n  \r\n  \r\n  function getSprints() {\r\n    return requestData(\r\n      \"/sprint/\" + props.Id,\r\n      {},\r\n      \"get\"\r\n    );\r\n\r\n  }\r\n  \r\n  useEffect(() => {\r\n\r\n    _isMounted.current = true;\r\n    fetchData();\r\n\r\n    return () => {\r\n      _isMounted.current = false;\r\n    }\r\n  }, []);\r\n\r\n  function fetchData(state) {\r\n    \r\n    let pageSize = state === undefined ? 5 : state.pageSize;\r\n    let page = state === undefined ? 0 : state.page;\r\n    let sorted = state === undefined ? sort : state.sorted;\r\n    setLoading(true);\r\n    \r\n    getSprints()\r\n      .then(res => {\r\n        for (let el of res.data) {\r\n          el.date = el.date.slice(0, 10);\r\n      }\r\n        getTableDataFromJSONObject(res.data, pageSize, page, sorted, \"sprints\")\r\n          .then(result => {\r\n            if (_isMounted.current) {\r\n              console.log(result)\r\n              setLoading(false);\r\n              setPages(result.pages === undefined ? 0 : result.pages);\r\n              setData(result.rows[0].sprints);\r\n              setTotalRecords(result.totalRecords);\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.warn(error);\r\n          if (_isMounted.current) {\r\n            setLoading(false);\r\n          }\r\n        });\r\n      })\r\n    .catch(error => {\r\n      console.warn(error);\r\n      if (_isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n  const history = useHistory();\r\n    const sprintPage = (id) => {\r\n      history.push(\"/sprint/\"+id)\r\n  }\r\n  return (\r\n    \r\n    <React.Fragment>\r\n    \t<div style={{ textAlign: \"center\", padding: \"35px\" }}>\r\n        <p />\r\n        <ReactTable\r\n            ref={postTableRef}\r\n            columns={[\r\n              {\r\n                Header: \"Id\",\r\n                accessor: \"id\",\r\n                width: 70,\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Date\",\r\n                accessor: \"date\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"View sprint\",\r\n                accessor: \"id\",\r\n                Cell: cell => (\r\n                <button className=\"btn btn-success\" \r\n                onClick={() =>sprintPage(cell.original.id)}>Kanban board\r\n                </button>\r\n                )\r\n              }\r\n            ]}\r\n            defaultSorted={[\r\n              {\r\n                id: \"id\",\r\n                desc: false\r\n              }\r\n            ]}\r\n            manual\r\n            data={data}\r\n            pages={pages}\r\n            loading={loading}\r\n            onFetchData={fetchData}\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n            SubComponent={row => {     \r\n              return (\r\n                \r\n                <div style={{ padding: \"10px\" }}>\r\n                  <h3>\r\n                    Tasks\r\n                  </h3>\r\n                  <TasksTable\r\n                    Id={row.original.id}\r\n                  />\r\n                </div>\r\n              );\r\n            }}      \r\n        >\r\n          {(state, makeTable) => {\r\n            return (\r\n              <RecordCount\r\n                state={state}\r\n                makeTable={makeTable}\r\n                totalRecords={totalRecords}\r\n              />\r\n            );\r\n          }}\r\n        </ReactTable>\r\n    \t</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSprintsTable.propTypes = {\r\n  Id: PropTypes.number,\r\n};\r\n\r\nexport default SprintsTable;","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\TasksTable.js",["133"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { requestData, getTableDataFromJSONObject } from \"./common/CommonFunctions.js\";\r\nimport ReactTable from \"react-table-6\";\r\nimport RecordCount from \"./widgets/RecordCount.js\";\r\nimport \"./index.css\";\r\nimport BranchesTable from \"./BranchesTable.js\";   \r\n\r\nconst TasksTable = (props) => {\r\n\r\n  const _isMounted = useRef(false);\r\n  const postTableRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pages, setPages] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  const sort = [{\"id\": \"id\",\"desc\": false}];\r\n\r\n  function getTasks() {\r\n    return requestData(\r\n      \"/task/\" + props.Id,\r\n      {},\r\n      \"get\"\r\n    );\r\n\r\n  }\r\n  useEffect(() => {\r\n    _isMounted.current = true;\r\n    fetchData();\r\n    return () => {\r\n      _isMounted.current = false;\r\n    }\r\n  }, []);\r\n\r\n  function fetchData(state) {\r\n    \r\n    let pageSize = state === undefined ? 5 : state.pageSize;\r\n    let page = state === undefined ? 0 : state.page;\r\n    let sorted = state === undefined ? sort : state.sorted;\r\n    setLoading(true);\r\n    \r\n    getTasks()\r\n      .then(res => {\r\n        \r\n        getTableDataFromJSONObject(res.data, pageSize, page, sorted, \"tasks\")\r\n          .then(result => {\r\n            if (_isMounted.current) {\r\n              console.log(result)\r\n              setLoading(false);\r\n              setPages(result.pages === undefined ? 0 : result.pages);\r\n              setData(result.rows[0].tasks);\r\n              setTotalRecords(result.totalRecords);\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.warn(error);\r\n          if (_isMounted.current) {\r\n            setLoading(false);\r\n          }\r\n        });\r\n      })\r\n    .catch(error => {\r\n      console.warn(error);\r\n      if (_isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    \t<div style={{ textAlign: \"center\", padding: \"35px\" }}>\r\n        <p />\r\n        <ReactTable\r\n            ref={postTableRef}\r\n            columns={[\r\n              {\r\n                Header: \"Id\",\r\n                accessor: \"id\",\r\n                width: 70,\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Description\",\r\n                accessor: \"description\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Points\",\r\n                accessor: \"points\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              }\r\n            ]}\r\n            defaultSorted={[\r\n              {\r\n                id: \"id\",\r\n                desc: false\r\n              }\r\n            ]}\r\n            manual\r\n            data={data}\r\n            pages={pages}\r\n            loading={loading}\r\n            onFetchData={fetchData}\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n            SubComponent={row => {     \r\n              return (\r\n                \r\n                <div style={{ padding: \"10px\" }}>\r\n                  <h3>\r\n                    Branches\r\n                  </h3>\r\n                  <BranchesTable\r\n                    Id={row.original.id}\r\n                  />\r\n                </div>\r\n              );\r\n            }}      \r\n        >\r\n          {(state, makeTable) => {\r\n            return (\r\n              <RecordCount\r\n                state={state}\r\n                makeTable={makeTable}\r\n                totalRecords={totalRecords}\r\n              />\r\n            );\r\n          }}\r\n        </ReactTable>\r\n    \t</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTasksTable.propTypes = {\r\n  Id: PropTypes.number,\r\n};\r\n\r\nexport default TasksTable;","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\BranchesTable.js",["134"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { requestData, getTableDataFromJSONObject } from \"./common/CommonFunctions.js\";\r\nimport ReactTable from \"react-table-6\";\r\nimport RecordCount from \"./widgets/RecordCount.js\";\r\nimport \"./index.css\";\r\nimport VersionsTable from \"./VersionsTable.js\";   \r\n\r\nconst BranchesTable = (props) => {\r\n\r\n  const _isMounted = useRef(false);\r\n  const postTableRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pages, setPages] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  const sort = [{\"id\": \"id\",\"desc\": false}];\r\n  \r\n  function getBranches() {\r\n    return requestData(\r\n      \"/branch/\" + props.Id,\r\n      {},\r\n      \"get\"\r\n    );\r\n\r\n  }\r\n  useEffect(() => {\r\n    _isMounted.current = true;\r\n    fetchData();\r\n    return () => {\r\n      _isMounted.current = false;\r\n    }\r\n  }, []);\r\n\r\n  function fetchData(state) {\r\n    let pageSize = state === undefined ? 5 : state.pageSize;\r\n    let page = state === undefined ? 0 : state.page;\r\n    let sorted = state === undefined ? sort : state.sorted;\r\n    setLoading(true);\r\n    \r\n    getBranches()\r\n      .then(res => {\r\n        getTableDataFromJSONObject(res.data, pageSize, page, sorted, \"branches\")\r\n          .then(result => {\r\n            if (_isMounted.current) {\r\n              console.log(result)\r\n              setLoading(false);\r\n              setPages(result.pages === undefined ? 0 : result.pages);\r\n              setData(result.rows[0].branches);\r\n              setTotalRecords(result.totalRecords);\r\n            }\r\n        })\r\n        .catch(error => {\r\n          console.warn(error);\r\n          if (_isMounted.current) {\r\n            setLoading(false);\r\n          }\r\n        });\r\n      })\r\n    .catch(error => {\r\n      console.warn(error);\r\n      if (_isMounted.current) {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    \t<div style={{ textAlign: \"center\", padding: \"35px\" }}>\r\n        <p />\r\n        <ReactTable\r\n            ref={postTableRef}\r\n            columns={[\r\n              {\r\n                Header: \"Id\",\r\n                accessor: \"id\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              },\r\n              {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                className: \"LeftAlignedText\",\r\n                headerClassName: \"BoldText ColoredText\"\r\n              }\r\n            ]}\r\n            defaultSorted={[\r\n              {\r\n                id: \"id\",\r\n                desc: false\r\n              }\r\n            ]}\r\n            manual\r\n            data={data}\r\n            pages={pages}\r\n            loading={loading}\r\n            onFetchData={fetchData}\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n            SubComponent={row => {     \r\n              return (\r\n                \r\n                <div style={{ padding: \"10px\" }}>\r\n                  <h3>\r\n                    Versions\r\n                  </h3>\r\n                  <VersionsTable\r\n                    Id={row.original.id}\r\n                  />\r\n                </div>\r\n              );\r\n            }}      \r\n        >\r\n          {(state, makeTable) => {\r\n            return (\r\n              <RecordCount\r\n                state={state}\r\n                makeTable={makeTable}\r\n                totalRecords={totalRecords}\r\n              />\r\n            );\r\n          }}\r\n        </ReactTable>\r\n    \t</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nBranchesTable.propTypes = {\r\n  Id: PropTypes.number,\r\n};\r\n\r\nexport default BranchesTable;","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\VersionsTable.js",["135"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Branch.js",["136","137","138","139","140","141","142","143","144"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CodeView.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlSprint.js",["145"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ProjectMember.js",["146","147","148"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlTasks.js",["149","150","151"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AssignManually.js",["152","153"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateTasks.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateSprint.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":16,"column":17,"nodeType":"160","messageId":"161","endLine":16,"endColumn":25},{"ruleId":"158","severity":1,"message":"163","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":44,"column":25,"nodeType":"166","messageId":"167","endLine":44,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":45,"column":28,"nodeType":"170","messageId":"171","endLine":45,"endColumn":30},{"ruleId":"158","severity":1,"message":"162","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":34},{"ruleId":"158","severity":1,"message":"172","line":13,"column":9,"nodeType":"160","messageId":"161","endLine":13,"endColumn":15},{"ruleId":"158","severity":1,"message":"173","line":32,"column":10,"nodeType":"160","messageId":"161","endLine":32,"endColumn":20},{"ruleId":"158","severity":1,"message":"174","line":93,"column":7,"nodeType":"160","messageId":"161","endLine":93,"endColumn":18},{"ruleId":"158","severity":1,"message":"162","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":34},{"ruleId":"168","severity":1,"message":"169","line":14,"column":41,"nodeType":"170","messageId":"171","endLine":14,"endColumn":43},{"ruleId":"168","severity":1,"message":"169","line":17,"column":39,"nodeType":"170","messageId":"171","endLine":17,"endColumn":41},{"ruleId":"158","severity":1,"message":"175","line":30,"column":10,"nodeType":"160","messageId":"161","endLine":30,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":20,"column":39,"nodeType":"170","messageId":"171","endLine":20,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":23,"column":37,"nodeType":"170","messageId":"171","endLine":23,"endColumn":39},{"ruleId":"176","severity":1,"message":"177","line":40,"column":6,"nodeType":"178","endLine":40,"endColumn":8,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"177","line":33,"column":6,"nodeType":"178","endLine":33,"endColumn":8,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"177","line":33,"column":6,"nodeType":"178","endLine":33,"endColumn":8,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"177","line":37,"column":6,"nodeType":"178","endLine":37,"endColumn":8,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"183","line":34,"column":24,"nodeType":"170","messageId":"171","endLine":34,"endColumn":26},{"ruleId":"168","severity":1,"message":"183","line":38,"column":31,"nodeType":"170","messageId":"171","endLine":38,"endColumn":33},{"ruleId":"168","severity":1,"message":"183","line":38,"column":42,"nodeType":"170","messageId":"171","endLine":38,"endColumn":44},{"ruleId":"168","severity":1,"message":"183","line":44,"column":32,"nodeType":"170","messageId":"171","endLine":44,"endColumn":34},{"ruleId":"168","severity":1,"message":"169","line":49,"column":42,"nodeType":"170","messageId":"171","endLine":49,"endColumn":44},{"ruleId":"168","severity":1,"message":"169","line":62,"column":22,"nodeType":"170","messageId":"171","endLine":62,"endColumn":24},{"ruleId":"168","severity":1,"message":"183","line":62,"column":33,"nodeType":"170","messageId":"171","endLine":62,"endColumn":35},{"ruleId":"168","severity":1,"message":"183","line":62,"column":48,"nodeType":"170","messageId":"171","endLine":62,"endColumn":50},{"ruleId":"168","severity":1,"message":"183","line":73,"column":32,"nodeType":"170","messageId":"171","endLine":73,"endColumn":34},{"ruleId":"158","severity":1,"message":"163","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":35,"column":23,"nodeType":"166","messageId":"167","endLine":35,"endColumn":25},{"ruleId":"168","severity":1,"message":"183","line":36,"column":28,"nodeType":"170","messageId":"171","endLine":36,"endColumn":30},{"ruleId":"158","severity":1,"message":"184","line":114,"column":38,"nodeType":"160","messageId":"161","endLine":114,"endColumn":47},{"ruleId":"168","severity":1,"message":"169","line":38,"column":38,"nodeType":"170","messageId":"171","endLine":38,"endColumn":40},{"ruleId":"168","severity":1,"message":"169","line":42,"column":29,"nodeType":"170","messageId":"171","endLine":42,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":58,"column":39,"nodeType":"170","messageId":"171","endLine":58,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":30,"column":38,"nodeType":"170","messageId":"171","endLine":30,"endColumn":40},{"ruleId":"185","severity":1,"message":"186","line":40,"column":19,"nodeType":"166","messageId":"187","endLine":42,"endColumn":14},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'format' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Branch' is defined but never used.","'branchShow' is assigned a value but never used.","'branchClose' is assigned a value but never used.","'sortJSONObjects' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["190"],["191"],["192"],["193"],"Expected '!==' and instead saw '!='.","'projectid' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'usersPoints'.","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"194","fix":"197"},{"desc":"194","fix":"198"},"Update the dependencies array to be: [fetchData]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},{"range":"203","text":"200"},[1069,1071],"[fetchData]",[964,966],[974,976],[979,981]]