[{"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js":"1","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js":"2","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js":"3","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js":"4","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js":"5","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js":"6","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js":"7","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js":"8","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\MyProjects.js":"9","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateComment.js":"10","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\common\\CommonFunctions.js":"11","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\RecordCount.js":"12","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\LoadingSpinner.js":"13","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlComment.js":"14","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\SprintsTable.js":"15","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\TasksTable.js":"16","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\BranchesTable.js":"17","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\VersionsTable.js":"18"},{"size":517,"mtime":1652514955911,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1648789762127,"results":"21","hashOfConfig":"20"},{"size":808,"mtime":1652538525610,"results":"22","hashOfConfig":"20"},{"size":253,"mtime":1648789762125,"results":"23","hashOfConfig":"20"},{"size":1079,"mtime":1651300407877,"results":"24","hashOfConfig":"20"},{"size":5703,"mtime":1650384158772,"results":"25","hashOfConfig":"20"},{"size":3528,"mtime":1650377608010,"results":"26","hashOfConfig":"20"},{"size":2856,"mtime":1649347821748,"results":"27","hashOfConfig":"20"},{"size":4621,"mtime":1652547581366,"results":"28","hashOfConfig":"20"},{"size":4017,"mtime":1652537508574,"results":"29","hashOfConfig":"20"},{"size":1584,"mtime":1652547424194,"results":"30","hashOfConfig":"20"},{"size":953,"mtime":1604370539666,"results":"31","hashOfConfig":"20"},{"size":568,"mtime":1603244841220,"results":"32","hashOfConfig":"20"},{"size":3701,"mtime":1652541025604,"results":"33","hashOfConfig":"20"},{"size":4252,"mtime":1652547562755,"results":"34","hashOfConfig":"20"},{"size":4548,"mtime":1652547561980,"results":"35","hashOfConfig":"20"},{"size":3939,"mtime":1652547561297,"results":"36","hashOfConfig":"20"},{"size":3549,"mtime":1652545750797,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1bhfiz6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\index.js",[],["81","82"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\reportWebVitals.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\App.js",["83","84"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {Home} from './Home';\r\nimport {AllProjects} from './AllProjects';\r\nimport MyProjects from './MyProjects';\r\nimport {ControlComment} from './ControlComment';\r\nimport {Navigation} from './Navigation';\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"container\">\r\n\r\n     <Navigation/>\r\n\r\n     <Switch>\r\n       <Route path='/' component={Home} exact/>\r\n       <Route path='/allProjects' component={AllProjects}/>\r\n       <Route path='/myProjects' component={MyProjects}/>\r\n       <Route path='/comments' component={ControlComment}/>\r\n     </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Home.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\Navigation.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\AllProjects.js",["85","86","87"],"import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\nimport {CreateProject} from './CreateProject';\r\nimport {EditProject} from './EditProject';\r\nimport { format } from 'date-fns'\r\n\r\nexport class AllProjects extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={projects:[], createShow:false, editShow:false}\r\n        this.state2 = {tasks:[]};\r\n    }\r\n\r\n    getProjects(){\r\n        fetch(process.env.REACT_APP_API+'project')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            for (let project of data) {\r\n                project.date = project.date.slice(0, 10);\r\n            }\r\n            this.setState({projects:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProjects();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getProjects();\r\n    }\r\n\r\n    // gets all tasks assigned to project and test whether they are Uzdaryti\r\n    testIfAllTasksFinished(projectid){\r\n        fetch(process.env.REACT_APP_API+'task/ProjectTasks'+projectid)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({tasks:data});\r\n        });\r\n        var flag = false;\r\n        const {tasks} = this.state2\r\n        tasks.map((task)=>{\r\n            if (task.busena=='Uzdaryta')flag=true;\r\n        });\r\n        return flag;\r\n    }\r\n\r\n    // first calls a func testIfAllTasksFinished and then ask for confirmation to delete project by id\r\n    deleteProject(projectId){\r\n        const flag = this.testIfAllTasksFinished(projectId);\r\n        if(flag){\r\n            if(window.confirm('There are unfinished tasks. \\nAre you sure you want to delete the project?')){\r\n                fetch(process.env.REACT_APP_API+'project/'+projectId,{\r\n                    method:'DELETE',\r\n                    header:{'Accept':'application/json',\r\n                'Content-Type':'application/json'}\r\n                });\r\n            }\r\n        }else{\r\n            if(window.confirm('Are you sure?')){\r\n                fetch(process.env.REACT_APP_API+'project/'+projectId,{\r\n                    method:'DELETE',\r\n                    header:{'Accept':'application/json',\r\n                    'Content-Type':'application/json'}\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {projects, projectId,projectName, projectDate, projectDescription}=this.state;//delete projectDescription mayby\r\n        console.log(projects)\r\n        let createClose=()=>this.setState({createShow:false});\r\n        let editClose=()=>this.setState({editShow:false});\r\n        return(\r\n            <div class=\"col-lg-12  text-center\">\r\n                <h1>All projects</h1>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project name</th>\r\n                            <th>Project creation date</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects.map(proj=>\r\n                            <tr key={proj.id}>\r\n                                <td>{proj.name}</td>\r\n                                <td>{proj.date}</td>\r\n                                <td >\r\n                                        <ButtonToolbar>\r\n                                            <Button className=\"mr-2\" variant=\"info\"\r\n                                            onClick={()=>this.setState({editShow:true,\r\n                                                projectId:proj.id, projectDate:proj.date, projectName:proj.name, projectDescription:proj.description})}>\r\n                                                    Edit\r\n                                                </Button>\r\n\r\n                                                <Button className=\"mr-2\" variant=\"danger\"\r\n                                            onClick={()=>this.deleteProject(proj.id)}>\r\n                                                    Delete\r\n                                                </Button>\r\n\r\n                                                <Button className=\"mr-2\" variant=\"primary\">\r\n                                                    Members\r\n                                                </Button>\r\n\r\n                                                <Button className=\"mr-2\" variant=\"secondary\">\r\n                                                    Statistic\r\n                                                </Button>\r\n\r\n                                                <EditProject show={this.state.editShow}\r\n                                                onHide={editClose}\r\n                                                projectId={projectId}\r\n                                                projectName={projectName}\r\n                                                projectDescription={projectDescription}\r\n                                                projectDate={projectDate}\r\n                                                />\r\n                                        </ButtonToolbar>\r\n\r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({createShow:true})}>\r\n                    Add Project</Button>\r\n\r\n                    <CreateProject show={this.state.createShow}\r\n                    onHide={createClose}/>\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\EditProject.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateProject.js",["88"],"import React,{Component, useState} from 'react';\r\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nexport class CreateProject extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'project',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:0,\r\n                name:event.target.name.value,\r\n                description:event.target.description.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    render(){     \r\n        return (\r\n            <div className=\"container\">\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Project\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Project Name</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"name\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"description\">\r\n                                    <Form.Label>Project Description</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"description\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Project\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\MyProjects.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\CreateComment.js",["89","90","91"],"import React,{Component, useState} from 'react';\r\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nexport class CreateComment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit=this.createComent.bind(this);\r\n    }\r\n\r\n\r\n    createComent(event){\r\n        event.preventDefault();\r\n        console.log(event.target.from_line.value)\r\n        if(event.target.from_line.value == \"\"){\r\n            event.target.from_line.value = -1\r\n        }\r\n        if(event.target.to_line.value == \"\"){\r\n            event.target.to_line.value = -1\r\n        }\r\n        fetch(process.env.REACT_APP_API+'comment',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                text:event.target.text.value,\r\n                from_line:event.target.from_line.value,\r\n                to_line:event.target.to_line.value,\r\n                foreign_version:event.target.foreign_version.value,\r\n                foreign_user:event.target.foreign_user.value,\r\n\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    render(){     \r\n        return (\r\n            <div className=\"container\">\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Project\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.createComent}>\r\n                                <Form.Group controlId=\"text\">\r\n                                    <Form.Label>Text</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"text\" required \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"from_line\">\r\n                                    <Form.Label>From line</Form.Label>\r\n                                    <Form.Control type=\"nummber\" name=\"from_line\"  \r\n                                    placeholder=''/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"to_line\">\r\n                                    <Form.Label>To line</Form.Label>\r\n                                    <Form.Control type=\"nummber\" name=\"to_line\"\r\n                                    placeholder=''  />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"foreign_version\">\r\n                                    <Form.Control type=\"hidden\" name=\"foreign_version\" value={2}/>\r\n                                </Form.Group>   \r\n                                <Form.Group controlId=\"foreign_user\">\r\n                                    <Form.Control type=\"hidden\" name=\"foreign_user\" value={1}/>\r\n                                </Form.Group>   \r\n\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Project\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\common\\CommonFunctions.js",["92"],"import axios from \"axios\";\r\n\r\nexport function objToQueryString(obj) {\r\n\tconst keyValuePairs = [];\r\n\tfor (const key in obj) {\r\n\t\tkeyValuePairs.push(\r\n\t\t\tencodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key])\r\n\t\t);\r\n\t}\r\n\treturn keyValuePairs.join(\"&\");\r\n}\r\n\r\nexport function requestData(url, paramObject, method) {\r\n  axios.defaults.baseURL = \"http://localhost:53535/api\";\r\n\treturn axios.request({\r\n\t\turl: url + objToQueryString(paramObject),\r\n\t\tmethod: method,\r\n\t\theaders: {\r\n\t\t\tPragma: \"no-cache\"\r\n\t\t}\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response;\r\n\t})\r\n\t.catch(error => {\r\n\t\treturn error;\r\n\t});\r\n}\r\n\r\nfunction sortJSONObjects(data, prop, desc) {\r\n  return data.sort(function(a, b) {\r\n    if (desc) {\r\n      return b[prop] > a[prop] ? 1 : b[prop] < a[prop] ? -1 : 0;\r\n    } else {\r\n      return a[prop] > b[prop] ? 1 : a[prop] < b[prop] ? -1 : 0;\r\n    }\r\n  });\r\n}\r\n\r\nexport function getTableDataFromJSONObject(\r\n  jsonData,\r\n  pageSize,\r\n  page,\r\n  sorted,\r\n  dataKey\r\n) {\r\n  let startIndex = 0;\r\n  let endIndex = pageSize;\r\n  if (page > 0) {\r\n    startIndex = page * pageSize;\r\n    endIndex = startIndex + pageSize;\r\n  }\r\n  //jsonData = sortJSONObjects(jsonData, sorted[0].id, sorted[0].desc);\r\n  return new Promise((resolve, reject) => {\r\n    if (jsonData) {\r\n      let rows = {\r\n        rows: [\r\n          {\r\n            [dataKey]: jsonData.slice(startIndex, endIndex)\r\n          }\r\n        ],\r\n        pages: Math.ceil(jsonData.length / pageSize),\r\n        totalRecords: jsonData.length\r\n      };\r\n      resolve(rows);\r\n    } else {\r\n      reject(\"Error\");\r\n    }\r\n  });\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\RecordCount.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\widgets\\LoadingSpinner.js",[],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\ControlComment.js",["93","94"],"import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\nimport {CreateComment} from './CreateComment';\r\n\r\nexport class ControlComment extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={comments:[], createShow:false, editShow:false}\r\n    }\r\n\r\n    getAllComments(){\r\n        fetch(process.env.REACT_APP_API+'comment')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            for (let comment of data) {\r\n                comment.date = comment.date.slice(0, 10);\r\n                if (comment.from_line == -1){\r\n                    comment.from_line = \"unspecified\"\r\n                }\r\n                if (comment.to_line == -1){\r\n                    comment.to_line = \"unspecified\"\r\n                }\r\n            }\r\n            this.setState({comments:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllComments();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getAllComments();\r\n    }\r\n\r\n    deleteComment(commentId){\r\n        if(window.confirm('Are you sure?')){\r\n            fetch(process.env.REACT_APP_API+'comment/'+commentId,{\r\n                method:'DELETE',\r\n                header:{'Accept':'application/json',\r\n                'Content-Type':'application/json'}\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {comments}=this.state;\r\n        let createClose=()=>this.setState({createShow:false});\r\n        return(\r\n            <div class=\"col-lg-12  text-center\">\r\n                <h1>All comments</h1>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Comment text</th>\r\n                            <th>Comment creation date</th>\r\n                            <th>User name</th>\r\n                            <th>Version id</th>\r\n                            <th>From line</th>\r\n                            <th>To line</th>\r\n                            <th>Project name</th>\r\n                            <th>Options</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {comments.map(co=>\r\n                            <tr key={co.id}>\r\n                                <td>{co.text}</td>\r\n                                <td>{co.date}</td>\r\n                                <td>{co.name}</td>\r\n                                <td>{co.foreign_version}</td>\r\n                                <td>{co.from_line}</td>\r\n                                <td>{co.to_line}</td>\r\n                                <td>{co.Project_name}</td>\r\n                                <td >\r\n                                        <ButtonToolbar>\r\n                                                <Button className=\"mr-2\" variant=\"danger\"\r\n                                            onClick={()=>this.deleteComment(co.id)}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                        </ButtonToolbar>\r\n\r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({createShow:true})}>\r\n                    Add Comment</Button>\r\n\r\n                    <CreateComment show={this.state.createShow}\r\n                    onHide={createClose}/>\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\SprintsTable.js",["95"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\TasksTable.js",["96"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\BranchesTable.js",["97"],"C:\\Users\\mante\\OneDrive\\Stalinis kompiuteris\\GIT\\fun\\my-app - Copy\\src\\VersionsTable.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":10,"column":17,"nodeType":"105","messageId":"106","endLine":10,"endColumn":25},{"ruleId":"103","severity":1,"message":"108","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":45,"column":25,"nodeType":"111","messageId":"112","endLine":45,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":46,"column":28,"nodeType":"115","messageId":"116","endLine":46,"endColumn":30},{"ruleId":"103","severity":1,"message":"107","line":1,"column":26,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},{"ruleId":"103","severity":1,"message":"107","line":1,"column":26,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":14,"column":41,"nodeType":"115","messageId":"116","endLine":14,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":17,"column":39,"nodeType":"115","messageId":"116","endLine":17,"endColumn":41},{"ruleId":"103","severity":1,"message":"117","line":30,"column":10,"nodeType":"105","messageId":"106","endLine":30,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":20,"column":39,"nodeType":"115","messageId":"116","endLine":20,"endColumn":41},{"ruleId":"113","severity":1,"message":"114","line":23,"column":37,"nodeType":"115","messageId":"116","endLine":23,"endColumn":39},{"ruleId":"103","severity":1,"message":"118","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":22},{"ruleId":"103","severity":1,"message":"118","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":22},{"ruleId":"103","severity":1,"message":"118","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":22},{"ruleId":"103","severity":1,"message":"118","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":22},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'format' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sortJSONObjects' is defined but never used.","'LoadingSpinner' is defined but never used.","no-global-assign","no-unsafe-negation"]